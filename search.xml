<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>live2d测试</title>
      <link href="/posts/62239.html"/>
      <url>/posts/62239.html</url>
      
        <content type="html"><![CDATA[<h3 id="live2d动漫人物插件安装"><a href="#live2d动漫人物插件安装" class="headerlink" title="live2d动漫人物插件安装"></a>live2d动漫人物插件安装</h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-helper-live2d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>安装模型插件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> live2d-widget-model-shizuku<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h4><p>在blog根目录配置文件(_config.yml)中添加如下代码：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">live2d</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">scriptFrom</span><span class="token punctuation">:</span> local  <span class="token key atrule">pluginRootPath</span><span class="token punctuation">:</span> live2dw/  <span class="token key atrule">pluginJsPath</span><span class="token punctuation">:</span> lib/  <span class="token key atrule">pluginModelPath</span><span class="token punctuation">:</span> assets/  <span class="token key atrule">tagMode</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">log</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">model</span><span class="token punctuation">:</span>    <span class="token key atrule">use</span><span class="token punctuation">:</span> live2d<span class="token punctuation">-</span>widget<span class="token punctuation">-</span>model<span class="token punctuation">-</span>shizuku  <span class="token key atrule">display</span><span class="token punctuation">:</span>    <span class="token key atrule">position</span><span class="token punctuation">:</span> right    <span class="token key atrule">width</span><span class="token punctuation">:</span> <span class="token number">150</span>    <span class="token key atrule">height</span><span class="token punctuation">:</span> <span class="token number">300</span>  <span class="token key atrule">mobile</span><span class="token punctuation">:</span>    <span class="token key atrule">show</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">react</span><span class="token punctuation">:</span>    <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>到这执行 hexo clean ,hexo g部署一下就可以了.</p><h3 id="live2d看板人物插件测试预览"><a href="#live2d看板人物插件测试预览" class="headerlink" title="live2d看板人物插件测试预览"></a>live2d看板人物插件测试预览</h3><p>查看已安装的插件</p><p><code>npm list</code></p><p>安装插件</p><p><code>npm i --save 名字</code></p><p>i  install</p><p>卸载插件</p><p><code>npm uninstall  名字</code></p><p>下面测试<a href="https://github.com/xiazeyu/live2d-widget-models">github上live2d</a>的所有模型.</p><ul><li><code>live2d-widget-model-nipsilon</code></li></ul><p><img src="demo00.png"></p><p>🤐</p><ul><li>live2d-widget-model-chitose</li></ul><p><img src="demo01.png"></p><p>😅</p><ul><li>live2d-widget-model-epsilon2_1</li></ul><p><img src="demo02.png"></p><p>🤔</p><ul><li>live2d-widget-model-gf</li></ul><p><img src="demo03.png"></p><p>😅</p><ul><li><code>live2d-widget-model-haru/01</code> (use <code>npm install --save live2d-widget-model-haru</code>)</li><li><code>live2d-widget-model-haru/02</code> (use <code>npm install --save live2d-widget-model-haru</code>)</li></ul><p>生成generate报错, 问题未知.</p><ul><li>live2d-widget-model-haruto</li></ul><p><img src="demo04.png"></p><p>🦄</p><ul><li><code>live2d-widget-model-hibiki</code></li></ul><p><img src="demo05.png"></p><p>🐒🐒</p><ul><li><code>live2d-widget-model-hijiki</code></li></ul><p><img src="demo06.png"></p><p>😅😅</p><ul><li><code>live2d-widget-model-izumi</code></li></ul><p><img src="demo07.png"></p><p>🥱🥱🥱</p><ul><li><code>live2d-widget-model-koharu</code></li></ul><p><img src="demo08.png"></p><p>🐎🐎🐎</p><ul><li><code>live2d-widget-model-miku</code></li></ul><p><img src="demo09.png"></p><p>😥😥</p><ul><li>live2d-widget-model-ni-j</li></ul><p><img src="demo10.png"></p><p>😪😪</p><ul><li><code>live2d-widget-model-nico</code></li></ul><p><img src="demo11.png"></p><ul><li>live2d-widget-model-nietzsche</li></ul><p><img src="demo12.png"></p><p>👽👽👽</p><ul><li><code>live2d-widget-model-nito</code></li></ul><p><img src="demo13.png"></p><p>😑😑</p><ul><li><code>live2d-widget-model-shizuku</code></li></ul><p><img src="demo14.png"></p><p>✔️✔️✔️</p><ul><li><code>live2d-widget-model-tororo</code></li></ul><p><img src="demo15.png"></p><p>🐒🐒🐒</p><ul><li><code>live2d-widget-model-tsumiki</code></li></ul><p><img src="demo16.png"></p><p>🐂🐎</p><ul><li><code>live2d-widget-model-unitychan</code></li></ul><p><img src="demo17.png"></p><p>🤐🤐🤐</p><ul><li><code>live2d-widget-model-wanko</code></li></ul><p><img src="demo18.png"></p><p>😋😋</p><ul><li>live2d-widget-model-z16</li></ul><p><img src="demo19.png"></p><p>🦄🦄🦄</p>]]></content>
      
      
      <categories>
          
          <category> 启航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github博客搭建笔记(简略)</title>
      <link href="/posts/25227.html"/>
      <url>/posts/25227.html</url>
      
        <content type="html"><![CDATA[<h2 id="hexo-github个人博客快速上手"><a href="#hexo-github个人博客快速上手" class="headerlink" title="hexo+github个人博客快速上手"></a>hexo+github个人博客快速上手</h2><p>依赖:</p><ul><li><h4 id="Git安装"><a href="#Git安装" class="headerlink" title="Git安装"></a><a href="https://git-scm.com/download/win">Git安装</a></h4></li></ul><p>索性一直下一步就好.✔<br>就最后一步添加路径选择Use Git from the Windows Command Prompt.<br>这样就可以在命令行里使用git.</p><ul><li><h4 id="绑定Github"><a href="#绑定Github" class="headerlink" title="绑定Github"></a>绑定Github</h4></li></ul><p><code>ssh-keygen -t rsa</code></p><p>生成密钥, 回车确认.</p><p>.ssh目录下就生成了这么个东西</p><p><img src="screenshot00.png"><br>然后要添加到github.在账户展开找到Settings, 然后有个SSH and GPG keys.</p><p>把pub文件里的内容赋值到key中.随便叫个名字保存.</p><p><code>ssh -T git@github.com</code></p><p>输入验证,yes 绑定成功,一般不会出问题.</p><h6 id="关于git-提交文件到远程仓库啥的参考菜鸟教程"><a href="#关于git-提交文件到远程仓库啥的参考菜鸟教程" class="headerlink" title="关于git 提交文件到远程仓库啥的参考菜鸟教程."></a>关于git 提交文件到远程仓库啥的参考<a href="https://www.runoob.com/git/git-create-repository.html">菜鸟教程</a>.</h6><ul><li><h4 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h4></li></ul><p><a href="https://nodejs.org/en/">node.js官网</a></p><p><a href="https://blog.csdn.net/antma/article/details/86104068">安装教程</a></p><p>安装后在命令行验证:</p><p><code>node -v         npm -v</code></p><h5 id="设置npm在安装全局模块时的路径和环境变量"><a href="#设置npm在安装全局模块时的路径和环境变量" class="headerlink" title="设置npm在安装全局模块时的路径和环境变量"></a>设置npm在安装全局模块时的路径和环境变量</h5><p>nodejs 文件夹中新建两个空文件夹 node_cache、node_global</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> config <span class="token builtin class-name">set</span> prefix <span class="token string">"D:<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_global"</span><span class="token function">npm</span> config <span class="token builtin class-name">set</span> cache <span class="token string">"D:<span class="token entity" title="\n">\n</span>odejs<span class="token entity" title="\n">\n</span>ode_cache"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>配置环境变量 “NODE_PATH” 值为”..\nodejs\node_global\node_modules”</p><p>然后编辑用户变量里的Path，将相应npm的路径改为：…\nodejs\node_global</p><p>在 cmd 命令下执行 npm install webpack -g ：</p><p><strong>这个时候可能会报错</strong></p><p>文件权限问题, 给node_global node_cache高点权限(完全控制)</p><ul><li><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4></li></ul><p><a href="https://hexo.io/docs/">hexo文档</a></p><p>先建一个Blog文件夹,在这目录下,右键菜单选择Git Bush Here.</p><p><code>npm install -g hexo-cli</code></p><p>安装hexo.</p><p><code>hexo init</code></p><p>这个命令用来初始化博客,就会生成默认配置的文件.</p><p>**如果显示 hexo command not found.**✖️😥</p><p>我采用的方式是给它配个环境变量, 在Path里加,值为”…/hexo/bin”.</p><p>然后就是会常用到的4个命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo clean   <span class="token comment">#清除缓存文件 db.json 和已生成的静态文件 public</span>hexo g       <span class="token comment">#生成网站静态文件到默认设置的 public 文件夹(hexo generate 的缩写)</span>hexo d       <span class="token comment">#自动生成网站静态文件，并部署到设定的仓库(hexo deploy 的缩写)</span>hexo s <span class="token comment"># server 启动本地服务器 localhost:4000即可访问</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>将hexo部署到github,</p><p><a href="https://blog.csdn.net/AinUser/article/details/77609180">参考博客1</a></p><p><a href="https://blog.csdn.net/qq_40871466/article/details/86763540">参考博客2</a></p><ul><li><h4 id="主题下载"><a href="#主题下载" class="headerlink" title="主题下载"></a>主题下载</h4></li></ul><p><a href="https://github.com/vercel/next.js/">next</a></p><p>据说很流行的主题, 风格很简约, 挺不错的✔️</p><p><a href="https://github.com/blinkfox/hexo-theme-matery">matery</a></p><p>目前在用, 综合体验还挺不错的. 🐒🐒🐒</p><p>主题下载可以直接去github下载最新版本, 然后放到 /themes 目录下,新建个文件夹.</p><p>根目录下的_config.yml中 theme:  填上主题名称.</p><ul><li><h4 id="写文章-发布文章"><a href="#写文章-发布文章" class="headerlink" title="写文章,发布文章"></a>写文章,发布文章</h4></li></ul><p>在博客根目录下打开git bash,</p><p><code>npm install hexo-deployer-git --save</code></p><p><img src="screenshot01.png"></p><p>这个置为true时, 每次新建一个文章</p><p>hexo new post “xxx”</p><p>会在同级目录下创建一个同名文件夹, 把文章里的图片放进去,</p><p>引用的时候就可以直接使用</p><p><code>![  ] ( 图片名称 )</code></p><p>来插入图片.✔️</p><ul><li><h4 id="PicGo"><a href="#PicGo" class="headerlink" title="PicGo"></a>PicGo</h4></li></ul><p>网上推荐这个<a href="https://github.com/Molunerfinn/PicGo">图床</a>. 效果还不错.</p><ul><li><h4 id="CDN访问加速"><a href="#CDN访问加速" class="headerlink" title="CDN访问加速"></a>CDN访问加速</h4></li></ul><p>github page别人访问时, 一般会很慢, 这样很不友好.</p><p><a href="https://blog.sky03.cn/posts/42790.html#toc-heading-17">参考优化教程</a></p><p>目前还不太清楚, 感觉自己优化了个寂寞, 图片懒加载后 还 直接裂开了.</p><p>😑😑😑😥😥😥</p>]]></content>
      
      
      <categories>
          
          <category> 启航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My Gallery</title>
      <link href="/posts/undefined.html"/>
      <url>/posts/undefined.html</url>
      
        <content type="html"><![CDATA[<h3 id="picgo测试"><a href="#picgo测试" class="headerlink" title="picgo测试"></a>picgo测试</h3><p>今天 ‘优化’ 过后,文章目录下的图片竟然都加载不出来了…😡😡😡😡😡</p><p>今天测试<a href="https://portal.qiniu.com/">七牛图床</a>.</p><h5 id="创建步骤"><a href="#创建步骤" class="headerlink" title="创建步骤"></a>创建步骤</h5><ul><li>去官网注册账号, 实名认证</li><li>创建对象存储空间</li><li>点头像下的密钥管理记录自己的AK(AcessKey)和 SK(SecretKey)</li><li>文件管理中显示外链域名,设置为默认域名, 保存生成的测试域名(体验期30天)</li></ul><p>然后去picgo设置 七牛图床.</p><p>填写信息, 存储区域z2(华南).</p><p>基本没问题, 保存后, 图片即可拖拽上传图片.</p><p>注: 发现个问题, 我设置的网址用的 https, 上传到图床实际保存的是 http开头, 所以改了一下.</p><h4 id="demo01"><a href="#demo01" class="headerlink" title="demo01"></a>demo01</h4><p><img src="http://r1s795mc7.hn-bkt.clouddn.com/luffy_picgo/luffy10.jpg"></p><h4 id="demo02"><a href="#demo02" class="headerlink" title="demo02"></a>demo02</h4><p><img src="http://r1s795mc7.hn-bkt.clouddn.com/luffy_picgo/luffy13.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 启航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个帖子</title>
      <link href="/posts/33183.html"/>
      <url>/posts/33183.html</url>
      
        <content type="html"><![CDATA[<p>下面引入一段名言.</p><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>wide Awake</cite></footer></blockquote><p>下面尝试代码块的引入.</p><pre class="line-numbers language-" data-language=""><div class="caption"><span>python</span></div><code class="language-">print("hello,world")a = 3b = 4print(a+b)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>超链接</li></ul><blockquote><p>随便搬运的一个博客链接,测试.</p><footer><strong>pygame</strong><cite><a href="https://blog.csdn.net/weixin_43649691/article/details/120947882?utm_medium=distribute.pc_category.none-task-blog-hot-3.nonecase&amp;depth_1-utm_source=distribute.pc_category.none-task-blog-hot-3.nonecase">python开发小游戏</a></cite></footer></blockquote><ul><li>然后测试图片插入的操作.<ul><li>本地图片插入(存放在source/images目录下)</li></ul></li></ul><p><img src="/images/beauty00.jpg"></p><ul><li>使用图床</li></ul><p><img src="https://i.imgur.com/EtPwnr7.jpg" alt="beauty"></p><ul><li>表情测试</li></ul><p>🥱🥱🥱</p><ul><li>代码块指定语言</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#从文件中读取文字</span><span class="token keyword">def</span> <span class="token function">getmessage</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span>    f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> choice<span class="token punctuation">(</span>lines<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>给代码块添加标题</li></ul><pre class="line-numbers language-python" data-language="python"><div class="caption"><span>Array.map</span></div><code class="language-python">array<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Hello, world!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>添加caption and URL</li></ul><pre class="line-numbers language-none"><div class="caption"><span>compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></div><code class="language-none">_.compact([0, 1, false, 2, '', 3]);=&gt; [1, 2, 3]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>嵌入youtube视频</li></ul><div class="video-container"><iframe src="https://www.youtube.com/embed/IhjbkOPme2Y" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p><code>格式: {% youtube video_id [type] [cookie] %}</code></p><ul><li><code>带播放列表</code></li></ul><p><code>{% youtube IhjbkOPme2Y 'playlist' %}</code></p><ul><li><code>隐私模式</code></li></ul><p><code>(禁止YouTube cookie)</code></p><p><code>{% youtube IhjbkOPme2Y  false %}</code></p>]]></content>
      
      
      <categories>
          
          <category> 启航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 启航 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> demo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
